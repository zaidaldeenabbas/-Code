def decrypt_monoalphabetic(ciphertext, key_map):
    """
    Decrypts a monoalphabetic cipher.

    :param ciphertext: The encrypted message (string)
    :param key_map: A dictionary mapping cipher letters to plain letters (e.g., {'Q': 'A', 'W': 'B', ...})
    :return: Decrypted plaintext string
    """
    plaintext = ''
    for char in ciphertext.upper():
        if char.isalpha():
            plaintext += key_map.get(char, '?')  # '?' if character is not found
        else:
            plaintext += char  # keep spaces, punctuation, etc.
    return plaintext


# Example usage
ciphertext = "GSRH RH Z HVXIVG"
# Example key (partial, you should fill the whole A-Z map based on your cipher)
# This example is the reverse alphabet: A -> Z, B -> Y, ..., Z -> A
key_map = {chr(i + ord('A')): chr(ord('Z') - i) for i in range(26)}

plaintext = decrypt_monoalphabetic(ciphertext, key_map)
print("Decrypted:", plaintext)
